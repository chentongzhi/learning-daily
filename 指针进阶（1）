#define _CRT_SECURE_NO_WARNINGS 1
#include <stdio.h>
//int main()
//{
//	float a = 5.5;
//	//5.5
//	//101.1
//	//-1^0 * 1.001 * 2^2
//	//S=0
//	//M=1.011
//	//E=2
//	//E的存储：2+127=129 -> 对应二进制 10000001
//	//0 100 0000 1 011 0000 0000 0000 0000 00000
//	//0x40b00000
//	//010000001011000000000000000000000
//	return 0;
//}

//void test(int arr[])
//{
//	int sz = 0;
//	sz = sizeof(arr) / sizeof(arr[0]);
//	printf("%d\n", sz);
//}
//int main()
//{
//	int arr[10] = { 0 };
//	test(arr);
//	return 0;
//}


//int main()
//{
//	char arr = 'w';
//	char*p = &arr;
//	return 0;
//}


//int main()
//{
//	char arr[] = "sidhsbsncj";
//	char* p = arr;
//	printf("%s\n", arr);
//	printf("%s\n",p);
//
//	return 0;
//}


//int main()
//{
//	char*p = "abcdef";
//	*p = 'w';
//	printf("%s\n", p);
//	return 0;
//}
//
//www.stackoverflow.com
//Segmentation fault - 段错误
//segmentfault.com
//


//int  main()
//{
//	char a1[] = "asdfg";
//	char a2[] = "asdfg";
//	char* p1 = "asdfg";
//	char* p2 = "asdfg";
//	if (p1 == p2)
//		printf("11");
//	else
//		printf("22");
//	/*if (a1 == a2)
//		printf("11");
//	else
//		printf("22");*/
//	return 0;
//}


//int main()
//{
//	int a = 10;
//	int b = 20;
//	int c = 30;
//	int d = 40;
//	int i = 0;
//	int*p[] = { &a, &b, &c, &d };
//	for (i = 0; i < 4; i++)
//	{
//		printf("%d\n", *(p[i]));
//	}
//	return 0;
//
//}


int main()
{
	int a[] = { 1, 2, 3, 4, 5 };
	int b[] = { 2, 3, 4, 5 ,6 };
	int c[] = { 3, 4, 5, 6 ,7 };
	int* p[] = { a, b, c };
	int i = 0;
	for (i = 0; i < 3; i++)
	{
		int j = 0;
		for (j = 0; j < 5; j++)
		{
			printf("%d", *(p[i] + j));
		}
		printf("\n");
	}
	return 0;
}
