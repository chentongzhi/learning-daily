嵌套调用
def test1():

    print("*" * 50)


def test2():

    print("-" * 50)
    #函数的嵌套调用
    test1()
    print("-" * 50)
test2()
----------------------------------------------
def sum_2_num(num1,num2):
    """对两个数字的求和"""

    result = num1 + num2
    # 可以使用返回值，告诉调用函数一方计算的结果
    return result
# 可以使用变量，来接受函数执行的最后结果
sum_result = sum_2_num(5,6)
print(sum_result)
------------------------------------------------
name = "小陈同志"

# Python 解释器知道下方定义了一个函数


def say_hello():
    """打招呼"""

    print("hello 1")
    print("hello 2")
    print("hello 3")

print(name)

# 只有在程序中，主动调用函数，才会让函数执行
say_hello()

print(name)
------------------------------------------------
import chen_01_九九乘法表

chen_01_九九乘法表.multiple_table()
------------------------------------------------
def multiple_table():
    row = 1
    while row <= 9:
        col = 1
        while col <= row:
            print("%d * %d = %d\t"%(col,row,col * row),end="")
            col += 1
        row += 1
        print("")
 -------------------------------------------------------
 # 九九乘法表
 row = 1
while row <= 9:
    col = 1
    while col <= row:
        print("%d * %d = %d\t"%(col,row,col * row),end="")
        col += 1
    row += 1
    print("")
----------------------------------------------------------
# \t 在控制台输出一个制表符，协助在输出文本时 垂直方向 保持对齐
# \n 在控制台输出一个换行符
--------------------------------------------------------------
# 补充： 在默认情况下，print函数输出内容之后，会自动在内容末尾增加换行
#       如果不希望在末尾增加换行，可是在print函数输出内容的后面增加,end=""
#       其中""中间可以指定print函数输出内容之后，继续希望显示的内容
#       语法格式为：
#       1.向控制台输出内容结束之后，不会换行
#           print("*",end="")
#       2.单纯的换行
#           print("")
row = 1
while row <= 5:
    col = 1
    while col <= row:
        print("*",end="")
        col += 1
    row += 1
    print("")
---------------------------------------------------------
i = 0

while i < 10:
    # continue 某一条件满足时，不执行后续重复的代码
    # i == 3
    if i == 3:
        # 注意：在循环中，如果使用 continue 这个关键字
        # 在使用关键字之前，需要确定循环的计数是否修改
        # 否则可能会导致死循环
        i += 1
        continue
    print(i)
    i += 1
---------------------------------------------------------------
# 导入随机工具包
# 注意：在导入工具包的时候，应该将导入的语句，放在文件的顶部
# 因为：这样可以方便下方代码，在任何需要的时候，使用工具包的工具
import random
# 从控制台输入要出的拳头——石头（1）/剪刀（2）/布（3）
player = int(input("请输入要出的拳：石头（1）/剪刀（2）/布（3）"))
# 电脑随机出拳
computer = random.randint(1,3)

print("玩家输入%d，电脑输入%d"%(player,computer))

if ((player == 1 and computer == 2)
        or(player == 2 and computer == 3)
        or(player == 3 and computer == 1)):
    print("玩家胜利")
elif player == computer:
    print("平局")
else:
    print("电脑胜利")
