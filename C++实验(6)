//第1题：某班的英语考试成绩分数如下： 90,100,86,77,52,83,69,75,98,77,67,81,83,92,86,85。
//（1）输出该班的总人数、最高分、最低分和平均分。
//（2）将该班英语考试成绩从高到低进行排序后输出(使用选择排序算法)。
//（3）在第（2）小题的基础上将成绩单中的85、77、69三个分数删除，将删除后的剩余分数按照从低到高进行输出(使用冒泡排序算法)。
//（4）在第（3）小题的基础上录入任意三个新成绩，将更新后的成绩从高到低进行输出(使用快速排序算法)。

#include<iostream>
using namespace std;
int MAX(int arr[],int sz)
{
	int index=arr[0];
	for(int i=1;i<sz;i++)
	{
		if(index<arr[i])
		    index=arr[i];
	}
	return index;
}

int MIN(int arr[],int sz)
{
	int index=arr[0];
	for(int i=1;i<sz;i++)
	{
		if(index>arr[i])
		    index=arr[i];
	}
	return index;
}

double AVE(int arr[],int sz)
{
	double sum=0;
	for(int i=0;i<sz;i++)
	{
		sum+=arr[i];
	}
	return sum/sz;
}

void sel_sort(int arr[],int sz)
{
	for(int i=0;i<sz;i++)
	    for(int j=i+1;j<sz;j++)
	        if(arr[i]<arr[j])
	        {
	        	int tmp=arr[i];
	        	arr[i]=arr[j];
	        	arr[j]=tmp;
			}
}

void del_arr(int arr[],int& sz)
{
	for(int i=0;i<sz;i++)
	{
		if(arr[i]==85||arr[i]==77||arr[i]==69)
		{
			for(int j=i;j<sz-1;j++)
			{
				arr[j]=arr[j+1];
			}
			sz-=1;
			i-=1;
		}
	}
}

void bubble_sort(int arr[],int sz)
{
	for(int i=0;i<sz;i++)
	    for(int j=0;j<sz-i-1;j++)
	        if(arr[j]>arr[j+1])
	        {
	        	int tmp=arr[j];
	        	arr[j]=arr[j+1];
	        	arr[j+1]=tmp;
			}
}

void input(int arr[],int& sz)
{
	int i=0;
	for(i=0;i<3;i++)
	{
		cin>>arr[sz+i];
	}
	sz+=i;
}

void quick_sort(int arr[],int left,int right)
{
	if(left<right)
	{
		int i=left,j=right,x=arr[left];
		while(i<j)
		{
			while(i<j&&arr[j]<=x)
			    j--;
			if(i<j)
			    arr[i++]=arr[j];
			while(i<j&&arr[i]>x)
			    i++;
			if(i<j)
			    arr[j--]=arr[i];
		}
		arr[i]=x;
		quick_sort(arr,left,right-1);
		quick_sort(arr,left+1,right);
	}
}

void Print(int arr[],int sz)
{
	for(int i=0;i<sz;i++)
	{
		cout<<arr[i]<<' ';
	}
	cout<<endl;
}

int main()
{
	int arr[]={90,100,86,77,52,83,69,75,98,77,67,81,83,92,86,85};
	int sz=sizeof(arr)/sizeof(arr[0]);
	cout<<"总人数为"<<sz<<endl;
	cout<<"最高分为"<<MAX(arr,sz)<<endl;
	cout<<"最低分为"<<MIN(arr,sz)<<endl;
	cout<<"平均分为"<<AVE(arr,sz)<<endl; 
	sel_sort(arr,sz); 
	cout<<"从高到低排序：";
	Print(arr,sz);
	del_arr(arr,sz);
	bubble_sort(arr,sz);
	cout<<"删除后，从低到高排序：";
	Print(arr,sz);
	input(arr,sz);
	quick_sort(arr,0,sz-1);
	cout<<"添加数据后，从大到小排序：";
	Print(arr,sz);
	return 0;
 } 
// 第2题：学会使用字符串操作函数：strcpy、strlen、strcat、strlwr、strupr。
//使用这些函数操作字符串并描述这些函数的功能
#include<iostream>
#include<cstring>
using namespace std;
int main()
{
	char str[20]={'1'};
	strcpy(str,"33Hello\0World");
	cout<<str<<endl;
	cout<<strlen(str)<<endl; 
	strcat(str,"Hello\0Bit");
	cout<<str<<endl;
	strlwr(str);
	cout<<str<<endl;
	strupr(str);
	cout<<str<<endl;
	return 0;
}

//strcpy(des,sour)  将源字符串复制到目标字符串中，包括'\0'，其后方内容不再复制，并且覆盖原有内容，
//           注意：目标字符串必须具有足够大的空间
//strlen(str)  计算字符串长度，直到遇到'\0'，遇到即停止
//           注意: 即使'\0'后仍有内容，也不会进行计算 
//strcat(des,sour)  将源字符串追加到目标字符串后，从目标字符串的'\0'开始进行追加（包括'\0'）
//strlwr(str)  将字符串中的大写字母全部转换成小写字母
//strupr(str)  将字符串中的小写字母全部转换成大写字母 


//第3题：自己动手实现第2题所列出的这些函数,同时使用与第2题相同的代码测试函数功能
#include<iostream>
using namespace std;
void my_strcpy(char* str1,const char* str2)
{
    while(*str2)
	{
	    *str1++=*str2++;	
	}
	*str1='\0';
}
int my_strlen(const char* str)
{
	int count=0;
    while(*str++)
	    count++;
	return count;	
}
void my_strcat(char* des,const char* sour)
{
	while(*des)
	    des++;
	while(*sour)
	    *des++=*sour++;
	*des='\0';	
}
void my_strlwr(char* str)
{
	while(*str)
	{
		if(*str>='A'&&*str<='Z')
	        *str+='a'-'A';
	    str++;
	}
}
void my_strupr(char* str)
{
	while(*str)
	{
		if(*str>='a'&&*str<='z')
	        *str-='a'-'A';
	    str++;
	}
}
int main()
{
	char str[20]={'1'};
	my_strcpy(str,"33Hello\0World");
	cout<<str<<endl;
	cout<<my_strlen(str)<<endl; 
	my_strcat(str,"Hello\0Bit");
	cout<<str<<endl;
	my_strlwr(str);
	cout<<str<<endl;
	my_strupr(str);
	cout<<str<<endl;
	return 0;
}

//第4题：在控制台输入任意一个只包含字母和数字的字符串，对该字符串进行加密，并输出加密后的字符串。
//加密处理的方法如下：对于数字：0 -> 9、1 -> 8、... ... 、9 -> 0；对于小写字母：a -> Z、b -> Y、... ... 、z -> A；
//对于大写字母：A -> z、B -> y、... ... 、Z -> a
#include<iostream>
using namespace std;
void data_enc(char*str)
{
	while(*str)
	{
		if(*str>='0'&&*str<='9')
		    *str='9'+'0'-*str;
		else if(*str>='a'&&*str<='z')
		    *str='Z'+'a'-*str;
		else
		    *str='a'+'Z'-*str;
	    str++;
	}
}
int main()
{
	char password[30]={0};
	cin>>password;
	data_enc(password);
	cout<<password;
	return 0;
}

//第5题在控制台输入一段密文（加密后的字符串），密文的加密方式如第3题所示。
//请对该密文进行解码，输出原字符串
#include<iostream>
using namespace std;
void data_enc(char*str)
{
	while(*str)
	{
		if(*str>='0'&&*str<='9')
		    *str='9'+'0'-*str;
		else if(*str>='a'&&*str<='z')
		    *str='Z'+'a'-*str;
		else
		    *str='a'+'Z'-*str;
	    str++;
	}
}
int main()
{
	char password[30]={0};
	cin>>password;
	data_enc(password);
	cout<<password;
	return 0;
}
