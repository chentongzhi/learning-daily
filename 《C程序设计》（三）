//用筛选法求100之内的素数
#include<stdio.h>
#include<math.h>
int main()
{
	int i = 1;
	int j = 1;
	for (i = 1; i <= 100; i += 2)
	{
		for (j = 2; j <= sqrt(i); j++)
		{
			if (i%j == 0)
				break;
		}
		if (j > sqrt(i))
		{
			printf("%d ", i);
		}
	}
-----------------------------------------------
//对10个整数进行排序
#include <iostream>
using namespace std;
#define MAX 10
void swap(int& a, int& b)
{
	int t = a;
	a = b;
	b = t;
}
int main()
{
	int arr[MAX];
	int i = 0;
	int index = 0;
	for (i = 0; i < MAX; i++)
	{
		scanf("%d", &arr[i]);
	}
	for (i = 0; i < MAX - 1; i++)
	{
		index = i;
		for (int j = i + 1; j < MAX; j++)
		{
			if (arr[index]>arr[j])
				index = j;
		}
		if (index != i)
		{
			swap(arr[i], arr[index]);
		}
	}
	for (i = 0; i < MAX; i++)
	{
		printf("%d ", arr[i]);
	}
	return 0;
}
-----------------------------------------------------------
求一个3*3的整形矩阵对角线元素之和
#include<stdio.h>
#include<math.h>
int main()
{
	int arr[3][3] = { { 1, 2, 3 }, { 2, 3, 5 }, { 5, 6, 9 } };
	int sum = arr[0][0] + arr[1][1] + arr[2][2];
	printf("%d\n", sum);
	return 0;
}
-----------------------------------------------------------
有一个已排序好的数组，要求输入一个数后，按原来排列的规律将他插入到其中
#include<stdio.h>
#include<string.h>
int main()
{
	int a = 0;
	scanf("%d", &a);
	int arr[20] = { 1, 2, 3, 4, 5, 6, 7, 8 };
	int len = 0;
	int j = 0;
	for (len = 0; arr[len] != '\0'; len++);
	if (a < arr[0])
	{
		printf("%d ", a);
		for (int i = 0; i < len; i++)
		{
			printf("%d ", arr[i]);
		}
	}


	else
	{
		for (j = 0; j < len; j++)
		{
			if (arr[j] <= a && arr[j + 1] >= a)
			{
				for (int index = len - 1; index >= j + 1; index--)
				{
					arr[index + 1] = arr[index];
				}
				arr[j + 1] = a;
				break;
			}
		}
		if (j == len)
			arr[len] = a;

		for (int i = 0; i < len + 1; i++)
		{
			printf("%d ", arr[i]);
		}
	}

	return 0;
}
----------------------------------------------------------------
将一个数列中的值按逆序重新存放。例如：原来是8，6，5，4，1。要求改成1，4，5，6，8
#include<stdio.h>
#define MAX 10
void swap(int a[], int len)
{
	int right = len;
	int left = 0;
	while (left < right)
	{
		int t = a[right];
		a[right] = a[left];
		a[left] = t;
		left++;
		right--;
	}
}
int main()
{
	int arr[MAX] = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };
	int len = MAX - 1;
	swap(arr, len);
	for (int i = 0; i <= len; i++)
	{
		printf("%d ", arr[i]);
	}
	return 0;
}
-----------------------------------------------------------------
输出以下的杨辉三角形（要求输出10行）
1
1 1 
1 2 1
1 3 3 1 
1 4 6 4 1
......
#include<stdio.h>
#define N 10
int main()
{
	int arr[N][N],i,j;
	for (i = 0; i < N; i++)
	{
		arr[i][i] = 1;
		arr[i][0] = 1;
	}
	for (i = 2; i < N; i++)
	{
		for (j = 1; j <= i - 1; j++)
		{
			arr[i][j] = arr[i - 1][j - 1] + arr[i - 1][j];
		}
	}
	for (i = 0; i < N; i++)
	{
		for (j = 0; j <= i; j++)
		{
			printf("%-6d", arr[i][j]);
		}
		printf("\n");
	}
	printf("\n");
	return 0;
}
